<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="806" onload="init(evt)" viewBox="0 0 1200 806" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="806.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="789" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="789" > </text>
<g id="frames">
<g >
<title>chunk_alloc_default_impl (16,666,666 samples, 1.23%)</title><rect x="1073.5" y="261" width="14.5" height="15.0" fill="rgb(215,178,52)" rx="2" ry="2" />
<text  x="1076.46" y="271.5" ></text>
</g>
<g >
<title>page_fault (16,666,666 samples, 1.23%)</title><rect x="1000.6" y="437" width="14.6" height="15.0" fill="rgb(220,102,54)" rx="2" ry="2" />
<text  x="1003.62" y="447.5" ></text>
</g>
<g >
<title>all (1,349,999,946 samples, 100%)</title><rect x="10.0" y="757" width="1180.0" height="15.0" fill="rgb(251,31,4)" rx="2" ry="2" />
<text  x="13.00" y="767.5" ></text>
</g>
<g >
<title>lane_init_data (16,666,666 samples, 1.23%)</title><rect x="1102.6" y="565" width="14.6" height="15.0" fill="rgb(253,30,39)" rx="2" ry="2" />
<text  x="1105.59" y="575.5" ></text>
</g>
<g >
<title>jbd2__journal_start (16,666,666 samples, 1.23%)</title><rect x="1029.8" y="389" width="14.5" height="15.0" fill="rgb(232,80,20)" rx="2" ry="2" />
<text  x="1032.75" y="399.5" ></text>
</g>
<g >
<title>db_bench_tool (216,666,658 samples, 16.05%)</title><rect x="971.5" y="677" width="189.4" height="15.0" fill="rgb(208,145,17)" rx="2" ry="2" />
<text  x="974.48" y="687.5" >db_bench_tool</text>
</g>
<g >
<title>get_page_from_freelist (33,333,332 samples, 2.47%)</title><rect x="97.4" y="309" width="29.1" height="15.0" fill="rgb(232,111,35)" rx="2" ry="2" />
<text  x="100.41" y="319.5" >ge..</text>
</g>
<g >
<title>do_page_fault (16,666,666 samples, 1.23%)</title><rect x="971.5" y="517" width="14.5" height="15.0" fill="rgb(252,58,42)" rx="2" ry="2" />
<text  x="974.48" y="527.5" ></text>
</g>
<g >
<title>__do_page_fault (16,666,666 samples, 1.23%)</title><rect x="1044.3" y="453" width="14.6" height="15.0" fill="rgb(245,150,51)" rx="2" ry="2" />
<text  x="1047.32" y="463.5" ></text>
</g>
<g >
<title>__handle_mm_fault (16,666,666 samples, 1.23%)</title><rect x="971.5" y="469" width="14.5" height="15.0" fill="rgb(243,141,20)" rx="2" ry="2" />
<text  x="974.48" y="479.5" ></text>
</g>
<g >
<title>perf_iterate_ctx (16,666,666 samples, 1.23%)</title><rect x="1073.5" y="37" width="14.5" height="15.0" fill="rgb(225,23,44)" rx="2" ry="2" />
<text  x="1076.46" y="47.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (16,666,666 samples, 1.23%)</title><rect x="388.8" y="309" width="14.5" height="15.0" fill="rgb(247,103,43)" rx="2" ry="2" />
<text  x="391.77" y="319.5" ></text>
</g>
<g >
<title>do_page_fault (16,666,666 samples, 1.23%)</title><rect x="1029.8" y="517" width="14.5" height="15.0" fill="rgb(221,101,35)" rx="2" ry="2" />
<text  x="1032.75" y="527.5" ></text>
</g>
<g >
<title>page_fault (16,666,666 samples, 1.23%)</title><rect x="1117.2" y="453" width="14.5" height="15.0" fill="rgb(215,10,43)" rx="2" ry="2" />
<text  x="1120.16" y="463.5" ></text>
</g>
<g >
<title>ext4_iomap_begin (16,666,666 samples, 1.23%)</title><rect x="1102.6" y="389" width="14.6" height="15.0" fill="rgb(223,17,27)" rx="2" ry="2" />
<text  x="1105.59" y="399.5" ></text>
</g>
<g >
<title>pmemobj_create (83,333,330 samples, 6.17%)</title><rect x="1029.8" y="581" width="72.8" height="15.0" fill="rgb(245,218,45)" rx="2" ry="2" />
<text  x="1032.75" y="591.5" >pmemobj_..</text>
</g>
<g >
<title>lane_recover_and_section_boot (33,333,332 samples, 2.47%)</title><rect x="986.0" y="533" width="29.2" height="15.0" fill="rgb(211,145,47)" rx="2" ry="2" />
<text  x="989.05" y="543.5" >la..</text>
</g>
<g >
<title>pmem2_source_device_id (16,666,666 samples, 1.23%)</title><rect x="1015.2" y="485" width="14.6" height="15.0" fill="rgb(254,31,44)" rx="2" ry="2" />
<text  x="1018.19" y="495.5" ></text>
</g>
<g >
<title>apparmor_file_free_security (16,666,666 samples, 1.23%)</title><rect x="1088.0" y="245" width="14.6" height="15.0" fill="rgb(219,72,10)" rx="2" ry="2" />
<text  x="1091.02" y="255.5" ></text>
</g>
<g >
<title>follow_huge_addr (16,666,666 samples, 1.23%)</title><rect x="956.9" y="373" width="14.6" height="15.0" fill="rgb(246,20,36)" rx="2" ry="2" />
<text  x="959.91" y="383.5" ></text>
</g>
<g >
<title>__mutex_lock_slowpath (233,333,324 samples, 17.28%)</title><rect x="753.0" y="309" width="203.9" height="15.0" fill="rgb(210,133,32)" rx="2" ry="2" />
<text  x="755.96" y="319.5" >__mutex_lock_slowpath</text>
</g>
<g >
<title>write_pmem (16,666,666 samples, 1.23%)</title><rect x="971.5" y="277" width="14.5" height="15.0" fill="rgb(208,75,29)" rx="2" ry="2" />
<text  x="974.48" y="287.5" ></text>
</g>
<g >
<title>arena_run_alloc_large (16,666,666 samples, 1.23%)</title><rect x="1073.5" y="357" width="14.5" height="15.0" fill="rgb(226,205,46)" rx="2" ry="2" />
<text  x="1076.46" y="367.5" ></text>
</g>
<g >
<title>page_fault (16,666,666 samples, 1.23%)</title><rect x="1029.8" y="533" width="14.5" height="15.0" fill="rgb(208,109,50)" rx="2" ry="2" />
<text  x="1032.75" y="543.5" ></text>
</g>
<g >
<title>ndctl_unref (16,666,666 samples, 1.23%)</title><rect x="1015.2" y="469" width="14.6" height="15.0" fill="rgb(253,216,16)" rx="2" ry="2" />
<text  x="1018.19" y="479.5" ></text>
</g>
<g >
<title>page_fault (16,666,666 samples, 1.23%)</title><rect x="986.0" y="469" width="14.6" height="15.0" fill="rgb(212,144,21)" rx="2" ry="2" />
<text  x="989.05" y="479.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (16,666,666 samples, 1.23%)</title><rect x="1102.6" y="213" width="14.6" height="15.0" fill="rgb(225,137,42)" rx="2" ry="2" />
<text  x="1105.59" y="223.5" ></text>
</g>
<g >
<title>pmemobj_create (66,666,664 samples, 4.94%)</title><rect x="971.5" y="581" width="58.3" height="15.0" fill="rgb(253,127,39)" rx="2" ry="2" />
<text  x="974.48" y="591.5" >pmemob..</text>
</g>
<g >
<title>operation_new (16,666,666 samples, 1.23%)</title><rect x="1044.3" y="517" width="14.6" height="15.0" fill="rgb(231,99,36)" rx="2" ry="2" />
<text  x="1047.32" y="527.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (16,666,666 samples, 1.23%)</title><rect x="388.8" y="325" width="14.5" height="15.0" fill="rgb(245,0,3)" rx="2" ry="2" />
<text  x="391.77" y="335.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (16,666,666 samples, 1.23%)</title><rect x="432.5" y="277" width="14.5" height="15.0" fill="rgb(254,192,10)" rx="2" ry="2" />
<text  x="435.47" y="287.5" ></text>
</g>
<g >
<title>page_counter_try_charge (16,666,666 samples, 1.23%)</title><rect x="126.5" y="277" width="14.6" height="15.0" fill="rgb(245,35,3)" rx="2" ry="2" />
<text  x="129.54" y="287.5" ></text>
</g>
<g >
<title>lane_recover_and_section_boot (33,333,332 samples, 2.47%)</title><rect x="1058.9" y="533" width="29.1" height="15.0" fill="rgb(254,227,20)" rx="2" ry="2" />
<text  x="1061.89" y="543.5" >la..</text>
</g>
<g >
<title>page_fault (16,666,666 samples, 1.23%)</title><rect x="1044.3" y="485" width="14.6" height="15.0" fill="rgb(229,63,32)" rx="2" ry="2" />
<text  x="1047.32" y="495.5" ></text>
</g>
<g >
<title>_copy_from_iter (33,333,332 samples, 2.47%)</title><rect x="505.3" y="309" width="29.1" height="15.0" fill="rgb(213,181,7)" rx="2" ry="2" />
<text  x="508.31" y="319.5" >_c..</text>
</g>
<g >
<title>obj_runtime_init.constprop.9 (49,999,998 samples, 3.70%)</title><rect x="1044.3" y="565" width="43.7" height="15.0" fill="rgb(205,223,36)" rx="2" ry="2" />
<text  x="1047.32" y="575.5" >obj_..</text>
</g>
<g >
<title>arena_chunk_init_hard (16,666,666 samples, 1.23%)</title><rect x="1073.5" y="325" width="14.5" height="15.0" fill="rgb(216,180,23)" rx="2" ry="2" />
<text  x="1076.46" y="335.5" ></text>
</g>
<g >
<title>Pmem::BindPool&lt;pmem_db&gt; (66,666,664 samples, 4.94%)</title><rect x="971.5" y="629" width="58.3" height="15.0" fill="rgb(247,40,6)" rx="2" ry="2" />
<text  x="974.48" y="639.5" >Pmem::..</text>
</g>
<g >
<title>recycler_new (16,666,666 samples, 1.23%)</title><rect x="1131.7" y="469" width="14.6" height="15.0" fill="rgb(217,177,16)" rx="2" ry="2" />
<text  x="1134.73" y="479.5" ></text>
</g>
<g >
<title>kmod_unref (16,666,666 samples, 1.23%)</title><rect x="1015.2" y="437" width="14.6" height="15.0" fill="rgb(252,211,45)" rx="2" ry="2" />
<text  x="1018.19" y="447.5" ></text>
</g>
<g >
<title>bucket_new (16,666,666 samples, 1.23%)</title><rect x="1117.2" y="469" width="14.5" height="15.0" fill="rgb(214,53,17)" rx="2" ry="2" />
<text  x="1120.16" y="479.5" ></text>
</g>
<g >
<title>blkdev_issue_zeroout (16,666,666 samples, 1.23%)</title><rect x="971.5" y="373" width="14.5" height="15.0" fill="rgb(213,36,36)" rx="2" ry="2" />
<text  x="974.48" y="383.5" ></text>
</g>
<g >
<title>start_thread (1,083,333,290 samples, 80.25%)</title><rect x="24.6" y="709" width="946.9" height="15.0" fill="rgb(216,219,17)" rx="2" ry="2" />
<text  x="27.57" y="719.5" >start_thread</text>
</g>
<g >
<title>__kernel_write (216,666,658 samples, 16.05%)</title><rect x="39.1" y="389" width="189.4" height="15.0" fill="rgb(249,203,50)" rx="2" ry="2" />
<text  x="42.14" y="399.5" >__kernel_write</text>
</g>
<g >
<title>dump_emit (816,666,634 samples, 60.49%)</title><rect x="243.1" y="389" width="713.8" height="15.0" fill="rgb(238,13,39)" rx="2" ry="2" />
<text  x="246.09" y="399.5" >dump_emit</text>
</g>
<g >
<title>__do_page_fault (16,666,666 samples, 1.23%)</title><rect x="1000.6" y="405" width="14.6" height="15.0" fill="rgb(235,1,44)" rx="2" ry="2" />
<text  x="1003.62" y="415.5" ></text>
</g>
<g >
<title>util_pool_create_uuids (16,666,666 samples, 1.23%)</title><rect x="1088.0" y="549" width="14.6" height="15.0" fill="rgb(227,85,16)" rx="2" ry="2" />
<text  x="1091.02" y="559.5" ></text>
</g>
<g >
<title>heap_boot (16,666,666 samples, 1.23%)</title><rect x="1117.2" y="501" width="14.5" height="15.0" fill="rgb(233,211,16)" rx="2" ry="2" />
<text  x="1120.16" y="511.5" ></text>
</g>
<g >
<title>ulog_construct (16,666,666 samples, 1.23%)</title><rect x="971.5" y="549" width="14.5" height="15.0" fill="rgb(254,184,17)" rx="2" ry="2" />
<text  x="974.48" y="559.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (16,666,666 samples, 1.23%)</title><rect x="1000.6" y="341" width="14.6" height="15.0" fill="rgb(209,16,10)" rx="2" ry="2" />
<text  x="1003.62" y="351.5" ></text>
</g>
<g >
<title>lane_recover_and_section_boot (33,333,332 samples, 2.47%)</title><rect x="1117.2" y="533" width="29.1" height="15.0" fill="rgb(207,66,35)" rx="2" ry="2" />
<text  x="1120.16" y="543.5" >la..</text>
</g>
<g >
<title>util_replica_create_local.constprop.12 (16,666,666 samples, 1.23%)</title><rect x="1015.2" y="533" width="14.6" height="15.0" fill="rgb(245,17,6)" rx="2" ry="2" />
<text  x="1018.19" y="543.5" ></text>
</g>
<g >
<title>perf_iterate_sb (16,666,666 samples, 1.23%)</title><rect x="1073.5" y="53" width="14.5" height="15.0" fill="rgb(230,18,51)" rx="2" ry="2" />
<text  x="1076.46" y="63.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (16,666,666 samples, 1.23%)</title><rect x="1088.0" y="357" width="14.6" height="15.0" fill="rgb(220,167,9)" rx="2" ry="2" />
<text  x="1091.02" y="367.5" ></text>
</g>
<g >
<title>inherit_event.isra.107 (16,666,666 samples, 1.23%)</title><rect x="10.0" y="565" width="14.6" height="15.0" fill="rgb(229,124,18)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>db_bench (1,349,999,946 samples, 100.00%)</title><rect x="10.0" y="741" width="1180.0" height="15.0" fill="rgb(251,219,31)" rx="2" ry="2" />
<text  x="13.00" y="751.5" >db_bench</text>
</g>
<g >
<title>__libc_start_main (216,666,658 samples, 16.05%)</title><rect x="971.5" y="709" width="189.4" height="15.0" fill="rgb(226,92,28)" rx="2" ry="2" />
<text  x="974.48" y="719.5" >__libc_start_main</text>
</g>
<g >
<title>memcpy_erms (83,333,330 samples, 6.17%)</title><rect x="141.1" y="325" width="72.9" height="15.0" fill="rgb(219,146,34)" rx="2" ry="2" />
<text  x="144.11" y="335.5" >memcpy_e..</text>
</g>
<g >
<title>exit_mmap (16,666,666 samples, 1.23%)</title><rect x="1160.9" y="597" width="14.5" height="15.0" fill="rgb(234,8,42)" rx="2" ry="2" />
<text  x="1163.86" y="607.5" ></text>
</g>
<g >
<title>mutex_spin_on_owner (233,333,324 samples, 17.28%)</title><rect x="753.0" y="277" width="203.9" height="15.0" fill="rgb(234,222,0)" rx="2" ry="2" />
<text  x="755.96" y="287.5" >mutex_spin_on_owner</text>
</g>
<g >
<title>do_page_fault (16,666,666 samples, 1.23%)</title><rect x="1058.9" y="421" width="14.6" height="15.0" fill="rgb(211,168,26)" rx="2" ry="2" />
<text  x="1061.89" y="431.5" ></text>
</g>
<g >
<title>__do_fault (16,666,666 samples, 1.23%)</title><rect x="1102.6" y="453" width="14.6" height="15.0" fill="rgb(254,214,35)" rx="2" ry="2" />
<text  x="1105.59" y="463.5" ></text>
</g>
<g >
<title>DelegatePool::BackgroundMainLoop (1,083,333,290 samples, 80.25%)</title><rect x="24.6" y="533" width="946.9" height="15.0" fill="rgb(248,46,52)" rx="2" ry="2" />
<text  x="27.57" y="543.5" >DelegatePool::BackgroundMainLoop</text>
</g>
<g >
<title>do_group_exit (16,666,666 samples, 1.23%)</title><rect x="1160.9" y="645" width="14.5" height="15.0" fill="rgb(228,178,49)" rx="2" ry="2" />
<text  x="1163.86" y="655.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (16,666,666 samples, 1.23%)</title><rect x="1000.6" y="453" width="14.6" height="15.0" fill="rgb(206,222,28)" rx="2" ry="2" />
<text  x="1003.62" y="463.5" ></text>
</g>
<g >
<title>chunk_alloc_core (16,666,666 samples, 1.23%)</title><rect x="1073.5" y="245" width="14.5" height="15.0" fill="rgb(251,110,16)" rx="2" ry="2" />
<text  x="1076.46" y="255.5" ></text>
</g>
<g >
<title>obj_runtime_init.constprop.9 (33,333,332 samples, 2.47%)</title><rect x="1117.2" y="565" width="29.1" height="15.0" fill="rgb(227,226,20)" rx="2" ry="2" />
<text  x="1120.16" y="575.5" >ob..</text>
</g>
<g >
<title>try_charge (16,666,666 samples, 1.23%)</title><rect x="476.2" y="277" width="14.5" height="15.0" fill="rgb(235,39,3)" rx="2" ry="2" />
<text  x="479.17" y="287.5" ></text>
</g>
<g >
<title>do_signal (16,666,666 samples, 1.23%)</title><rect x="1160.9" y="677" width="14.5" height="15.0" fill="rgb(209,70,37)" rx="2" ry="2" />
<text  x="1163.86" y="687.5" ></text>
</g>
<g >
<title>__handle_mm_fault (16,666,666 samples, 1.23%)</title><rect x="1102.6" y="469" width="14.6" height="15.0" fill="rgb(245,89,12)" rx="2" ry="2" />
<text  x="1105.59" y="479.5" ></text>
</g>
<g >
<title>[libndctl.so.6.16.0] (16,666,666 samples, 1.23%)</title><rect x="1088.0" y="421" width="14.6" height="15.0" fill="rgb(228,17,36)" rx="2" ry="2" />
<text  x="1091.02" y="431.5" ></text>
</g>
<g >
<title>__mutex_lock.isra.4 (16,666,666 samples, 1.23%)</title><rect x="214.0" y="309" width="14.5" height="15.0" fill="rgb(208,177,9)" rx="2" ry="2" />
<text  x="216.95" y="319.5" ></text>
</g>
<g >
<title>lane_boot (16,666,666 samples, 1.23%)</title><rect x="1044.3" y="533" width="14.6" height="15.0" fill="rgb(235,129,38)" rx="2" ry="2" />
<text  x="1047.32" y="543.5" ></text>
</g>
<g >
<title>ext4_dax_huge_fault (16,666,666 samples, 1.23%)</title><rect x="1102.6" y="421" width="14.6" height="15.0" fill="rgb(236,5,33)" rx="2" ry="2" />
<text  x="1105.59" y="431.5" ></text>
</g>
<g >
<title>heap_boot (16,666,666 samples, 1.23%)</title><rect x="986.0" y="501" width="14.6" height="15.0" fill="rgb(249,0,38)" rx="2" ry="2" />
<text  x="989.05" y="511.5" ></text>
</g>
<g >
<title>perf_event_init_task (16,666,666 samples, 1.23%)</title><rect x="10.0" y="597" width="14.6" height="15.0" fill="rgb(227,211,33)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>je_arena_malloc (16,666,666 samples, 1.23%)</title><rect x="1073.5" y="389" width="14.5" height="15.0" fill="rgb(212,96,2)" rx="2" ry="2" />
<text  x="1076.46" y="399.5" ></text>
</g>
<g >
<title>handle_mm_fault (16,666,666 samples, 1.23%)</title><rect x="1029.8" y="485" width="14.5" height="15.0" fill="rgb(249,196,18)" rx="2" ry="2" />
<text  x="1032.75" y="495.5" ></text>
</g>
<g >
<title>__do_page_fault (16,666,666 samples, 1.23%)</title><rect x="971.5" y="501" width="14.5" height="15.0" fill="rgb(205,19,5)" rx="2" ry="2" />
<text  x="974.48" y="511.5" ></text>
</g>
<g >
<title>ext4_issue_zeroout (16,666,666 samples, 1.23%)</title><rect x="971.5" y="389" width="14.5" height="15.0" fill="rgb(233,66,47)" rx="2" ry="2" />
<text  x="974.48" y="399.5" ></text>
</g>
<g >
<title>Pmem::BindPoolSet&lt;pmem_blob_root&gt; (83,333,330 samples, 6.17%)</title><rect x="1029.8" y="629" width="72.8" height="15.0" fill="rgb(221,34,9)" rx="2" ry="2" />
<text  x="1032.75" y="639.5" >Pmem::Bi..</text>
</g>
<g >
<title>task_work_run (16,666,666 samples, 1.23%)</title><rect x="1088.0" y="309" width="14.6" height="15.0" fill="rgb(209,168,36)" rx="2" ry="2" />
<text  x="1091.02" y="319.5" ></text>
</g>
<g >
<title>__do_fault (16,666,666 samples, 1.23%)</title><rect x="1029.8" y="453" width="14.5" height="15.0" fill="rgb(226,112,33)" rx="2" ry="2" />
<text  x="1032.75" y="463.5" ></text>
</g>
<g >
<title>obj_runtime_init.constprop.9 (33,333,332 samples, 2.47%)</title><rect x="986.0" y="565" width="29.2" height="15.0" fill="rgb(208,184,31)" rx="2" ry="2" />
<text  x="989.05" y="575.5" >ob..</text>
</g>
<g >
<title>do_syscall_64 (16,666,666 samples, 1.23%)</title><rect x="10.0" y="661" width="14.6" height="15.0" fill="rgb(238,23,33)" rx="2" ry="2" />
<text  x="13.00" y="671.5" ></text>
</g>
<g >
<title>__do_page_fault (16,666,666 samples, 1.23%)</title><rect x="1117.2" y="421" width="14.5" height="15.0" fill="rgb(246,14,6)" rx="2" ry="2" />
<text  x="1120.16" y="431.5" ></text>
</g>
<g >
<title>mutex_unlock (33,333,332 samples, 2.47%)</title><rect x="39.1" y="357" width="29.2" height="15.0" fill="rgb(214,229,4)" rx="2" ry="2" />
<text  x="42.14" y="367.5" >mu..</text>
</g>
<g >
<title>handle_mm_fault (16,666,666 samples, 1.23%)</title><rect x="1044.3" y="437" width="14.6" height="15.0" fill="rgb(249,14,51)" rx="2" ry="2" />
<text  x="1047.32" y="447.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (16,666,666 samples, 1.23%)</title><rect x="1073.5" y="133" width="14.5" height="15.0" fill="rgb(248,107,31)" rx="2" ry="2" />
<text  x="1076.46" y="143.5" ></text>
</g>
<g >
<title>do_page_fault (16,666,666 samples, 1.23%)</title><rect x="1102.6" y="517" width="14.6" height="15.0" fill="rgb(248,137,5)" rx="2" ry="2" />
<text  x="1105.59" y="527.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (16,666,666 samples, 1.23%)</title><rect x="1044.3" y="501" width="14.6" height="15.0" fill="rgb(228,63,52)" rx="2" ry="2" />
<text  x="1047.32" y="511.5" ></text>
</g>
<g >
<title>page_fault (16,666,666 samples, 1.23%)</title><rect x="1102.6" y="533" width="14.6" height="15.0" fill="rgb(237,39,5)" rx="2" ry="2" />
<text  x="1105.59" y="543.5" ></text>
</g>
<g >
<title>get_signal (16,666,666 samples, 1.23%)</title><rect x="1160.9" y="661" width="14.5" height="15.0" fill="rgb(213,17,19)" rx="2" ry="2" />
<text  x="1163.86" y="671.5" ></text>
</g>
<g >
<title>ulog_construct (16,666,666 samples, 1.23%)</title><rect x="1102.6" y="549" width="14.6" height="15.0" fill="rgb(216,64,18)" rx="2" ry="2" />
<text  x="1105.59" y="559.5" ></text>
</g>
<g >
<title>pmalloc_boot (33,333,332 samples, 2.47%)</title><rect x="1117.2" y="517" width="29.1" height="15.0" fill="rgb(228,172,23)" rx="2" ry="2" />
<text  x="1120.16" y="527.5" >pm..</text>
</g>
<g >
<title>pmem2_region_namespace (16,666,666 samples, 1.23%)</title><rect x="1088.0" y="469" width="14.6" height="15.0" fill="rgb(242,173,24)" rx="2" ry="2" />
<text  x="1091.02" y="479.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (16,666,666 samples, 1.23%)</title><rect x="1029.8" y="405" width="14.5" height="15.0" fill="rgb(215,180,2)" rx="2" ry="2" />
<text  x="1032.75" y="415.5" ></text>
</g>
<g >
<title>heap_create_alloc_class_buckets (16,666,666 samples, 1.23%)</title><rect x="1131.7" y="485" width="14.6" height="15.0" fill="rgb(212,3,42)" rx="2" ry="2" />
<text  x="1134.73" y="495.5" ></text>
</g>
<g >
<title>malloc (16,666,666 samples, 1.23%)</title><rect x="1073.5" y="453" width="14.5" height="15.0" fill="rgb(222,186,5)" rx="2" ry="2" />
<text  x="1076.46" y="463.5" ></text>
</g>
<g >
<title>submit_bio_wait_endio (16,666,666 samples, 1.23%)</title><rect x="1102.6" y="245" width="14.6" height="15.0" fill="rgb(222,199,24)" rx="2" ry="2" />
<text  x="1105.59" y="255.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;std::_Bind&lt;void  (1,083,333,290 samples, 80.25%)</title><rect x="24.6" y="645" width="946.9" height="15.0" fill="rgb(211,93,54)" rx="2" ry="2" />
<text  x="27.57" y="655.5" >std::thread::_Invoker&lt;std::tuple&lt;std::_Bind&lt;void </text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;std::_Bind&lt;void  (1,083,333,290 samples, 80.25%)</title><rect x="24.6" y="677" width="946.9" height="15.0" fill="rgb(238,220,33)" rx="2" ry="2" />
<text  x="27.57" y="687.5" >std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;std::_Bind&lt;void </text>
</g>
<g >
<title>page_counter_try_charge (16,666,666 samples, 1.23%)</title><rect x="447.0" y="261" width="14.6" height="15.0" fill="rgb(237,188,17)" rx="2" ry="2" />
<text  x="450.04" y="271.5" ></text>
</g>
<g >
<title>[libndctl.so.6.16.0] (16,666,666 samples, 1.23%)</title><rect x="1088.0" y="405" width="14.6" height="15.0" fill="rgb(233,66,12)" rx="2" ry="2" />
<text  x="1091.02" y="415.5" ></text>
</g>
<g >
<title>__do_page_fault (16,666,666 samples, 1.23%)</title><rect x="1029.8" y="501" width="14.5" height="15.0" fill="rgb(227,65,20)" rx="2" ry="2" />
<text  x="1032.75" y="511.5" ></text>
</g>
<g >
<title>pmem::obj::pool_base::create (49,999,998 samples, 3.70%)</title><rect x="1102.6" y="597" width="43.7" height="15.0" fill="rgb(239,110,45)" rx="2" ry="2" />
<text  x="1105.59" y="607.5" >pmem..</text>
</g>
<g >
<title>obj_runtime_init_common (33,333,332 samples, 2.47%)</title><rect x="986.0" y="549" width="29.2" height="15.0" fill="rgb(239,65,13)" rx="2" ry="2" />
<text  x="989.05" y="559.5" >ob..</text>
</g>
<g >
<title>ext4_map_blocks (16,666,666 samples, 1.23%)</title><rect x="971.5" y="405" width="14.5" height="15.0" fill="rgb(211,109,7)" rx="2" ry="2" />
<text  x="974.48" y="415.5" ></text>
</g>
<g >
<title>unmap_vmas (16,666,666 samples, 1.23%)</title><rect x="1160.9" y="581" width="14.5" height="15.0" fill="rgb(229,142,50)" rx="2" ry="2" />
<text  x="1163.86" y="591.5" ></text>
</g>
<g >
<title>ialloc_body (16,666,666 samples, 1.23%)</title><rect x="1073.5" y="437" width="14.5" height="15.0" fill="rgb(227,47,9)" rx="2" ry="2" />
<text  x="1076.46" y="447.5" ></text>
</g>
<g >
<title>copy_page_from_iter (83,333,330 samples, 6.17%)</title><rect x="141.1" y="341" width="72.9" height="15.0" fill="rgb(232,192,50)" rx="2" ry="2" />
<text  x="144.11" y="351.5" >copy_pag..</text>
</g>
<g >
<title>je_arena_malloc_large (16,666,666 samples, 1.23%)</title><rect x="1073.5" y="373" width="14.5" height="15.0" fill="rgb(211,31,44)" rx="2" ry="2" />
<text  x="1076.46" y="383.5" ></text>
</g>
<g >
<title>mem_cgroup_commit_charge (16,666,666 samples, 1.23%)</title><rect x="1044.3" y="405" width="14.6" height="15.0" fill="rgb(250,217,25)" rx="2" ry="2" />
<text  x="1047.32" y="415.5" ></text>
</g>
<g >
<title>do_signal (1,066,666,624 samples, 79.01%)</title><rect x="39.1" y="469" width="932.4" height="15.0" fill="rgb(234,9,26)" rx="2" ry="2" />
<text  x="42.14" y="479.5" >do_signal</text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (1,083,333,290 samples, 80.25%)</title><rect x="24.6" y="693" width="946.9" height="15.0" fill="rgb(220,103,14)" rx="2" ry="2" />
<text  x="27.57" y="703.5" >[libstdc++.so.6.0.29]</text>
</g>
<g >
<title>recycler_new (16,666,666 samples, 1.23%)</title><rect x="1000.6" y="469" width="14.6" height="15.0" fill="rgb(218,123,46)" rx="2" ry="2" />
<text  x="1003.62" y="479.5" ></text>
</g>
<g >
<title>__mutex_lock.isra.4 (233,333,324 samples, 17.28%)</title><rect x="753.0" y="293" width="203.9" height="15.0" fill="rgb(242,217,31)" rx="2" ry="2" />
<text  x="755.96" y="303.5" >__mutex_lock.isra.4</text>
</g>
<g >
<title>__alloc_pages_nodemask (16,666,666 samples, 1.23%)</title><rect x="986.0" y="373" width="14.6" height="15.0" fill="rgb(254,72,21)" rx="2" ry="2" />
<text  x="989.05" y="383.5" ></text>
</g>
<g >
<title>pipe_write (183,333,326 samples, 13.58%)</title><rect x="68.3" y="357" width="160.2" height="15.0" fill="rgb(239,100,46)" rx="2" ry="2" />
<text  x="71.27" y="367.5" >pipe_write</text>
</g>
<g >
<title>do_page_fault (16,666,666 samples, 1.23%)</title><rect x="1000.6" y="421" width="14.6" height="15.0" fill="rgb(225,212,34)" rx="2" ry="2" />
<text  x="1003.62" y="431.5" ></text>
</g>
<g >
<title>je_ialloc (16,666,666 samples, 1.23%)</title><rect x="1073.5" y="421" width="14.5" height="15.0" fill="rgb(228,6,39)" rx="2" ry="2" />
<text  x="1076.46" y="431.5" ></text>
</g>
<g >
<title>pmem::obj::pool&lt;pmem_db&gt;::create (66,666,664 samples, 4.94%)</title><rect x="971.5" y="613" width="58.3" height="15.0" fill="rgb(234,180,23)" rx="2" ry="2" />
<text  x="974.48" y="623.5" >pmem::..</text>
</g>
<g >
<title>heap_create_alloc_class_buckets (16,666,666 samples, 1.23%)</title><rect x="1000.6" y="485" width="14.6" height="15.0" fill="rgb(245,133,46)" rx="2" ry="2" />
<text  x="1003.62" y="495.5" ></text>
</g>
<g >
<title>submit_bio_wait (16,666,666 samples, 1.23%)</title><rect x="1102.6" y="325" width="14.6" height="15.0" fill="rgb(246,35,14)" rx="2" ry="2" />
<text  x="1105.59" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (16,666,666 samples, 1.23%)</title><rect x="1088.0" y="341" width="14.6" height="15.0" fill="rgb(237,144,44)" rx="2" ry="2" />
<text  x="1091.02" y="351.5" ></text>
</g>
<g >
<title>do_page_fault (16,666,666 samples, 1.23%)</title><rect x="1131.7" y="421" width="14.6" height="15.0" fill="rgb(206,184,41)" rx="2" ry="2" />
<text  x="1134.73" y="431.5" ></text>
</g>
<g >
<title>je_chunk_alloc_mmap (16,666,666 samples, 1.23%)</title><rect x="1073.5" y="229" width="14.5" height="15.0" fill="rgb(215,30,0)" rx="2" ry="2" />
<text  x="1076.46" y="239.5" ></text>
</g>
<g >
<title>__GI___clone (16,666,666 samples, 1.23%)</title><rect x="10.0" y="693" width="14.6" height="15.0" fill="rgb(238,190,12)" rx="2" ry="2" />
<text  x="13.00" y="703.5" ></text>
</g>
<g >
<title>__vfs_write (783,333,302 samples, 58.02%)</title><rect x="272.2" y="357" width="684.7" height="15.0" fill="rgb(214,225,14)" rx="2" ry="2" />
<text  x="275.22" y="367.5" >__vfs_write</text>
</g>
<g >
<title>vm_mmap_pgoff (16,666,666 samples, 1.23%)</title><rect x="1073.5" y="117" width="14.5" height="15.0" fill="rgb(206,129,27)" rx="2" ry="2" />
<text  x="1076.46" y="127.5" ></text>
</g>
<g >
<title>mutex_spin_on_owner (16,666,666 samples, 1.23%)</title><rect x="214.0" y="293" width="14.5" height="15.0" fill="rgb(248,40,34)" rx="2" ry="2" />
<text  x="216.95" y="303.5" ></text>
</g>
<g >
<title>page_fault (16,666,666 samples, 1.23%)</title><rect x="1058.9" y="437" width="14.6" height="15.0" fill="rgb(212,102,48)" rx="2" ry="2" />
<text  x="1061.89" y="447.5" ></text>
</g>
<g >
<title>clear_page_erms (16,666,666 samples, 1.23%)</title><rect x="1131.7" y="325" width="14.6" height="15.0" fill="rgb(221,101,13)" rx="2" ry="2" />
<text  x="1134.73" y="335.5" ></text>
</g>
<g >
<title>page_fault (16,666,666 samples, 1.23%)</title><rect x="1131.7" y="437" width="14.6" height="15.0" fill="rgb(253,33,41)" rx="2" ry="2" />
<text  x="1134.73" y="447.5" ></text>
</g>
<g >
<title>get_signal (1,066,666,624 samples, 79.01%)</title><rect x="39.1" y="453" width="932.4" height="15.0" fill="rgb(222,168,8)" rx="2" ry="2" />
<text  x="42.14" y="463.5" >get_signal</text>
</g>
<g >
<title>obj_runtime_init_common (33,333,332 samples, 2.47%)</title><rect x="1117.2" y="549" width="29.1" height="15.0" fill="rgb(227,97,40)" rx="2" ry="2" />
<text  x="1120.16" y="559.5" >ob..</text>
</g>
<g >
<title>generic_update_time (16,666,666 samples, 1.23%)</title><rect x="723.8" y="309" width="14.6" height="15.0" fill="rgb(230,43,34)" rx="2" ry="2" />
<text  x="726.83" y="319.5" ></text>
</g>
<g >
<title>pmem::obj::pool_base::create (83,333,330 samples, 6.17%)</title><rect x="1029.8" y="597" width="72.8" height="15.0" fill="rgb(215,114,36)" rx="2" ry="2" />
<text  x="1032.75" y="607.5" >pmem::ob..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (16,666,666 samples, 1.23%)</title><rect x="1073.5" y="181" width="14.5" height="15.0" fill="rgb(216,145,50)" rx="2" ry="2" />
<text  x="1076.46" y="191.5" ></text>
</g>
<g >
<title>shutdown_state_add_part (16,666,666 samples, 1.23%)</title><rect x="1015.2" y="501" width="14.6" height="15.0" fill="rgb(253,214,50)" rx="2" ry="2" />
<text  x="1018.19" y="511.5" ></text>
</g>
<g >
<title>pipe_write (699,999,972 samples, 51.85%)</title><rect x="345.1" y="341" width="611.8" height="15.0" fill="rgb(244,7,16)" rx="2" ry="2" />
<text  x="348.06" y="351.5" >pipe_write</text>
</g>
<g >
<title>handle_mm_fault (16,666,666 samples, 1.23%)</title><rect x="1102.6" y="485" width="14.6" height="15.0" fill="rgb(211,227,2)" rx="2" ry="2" />
<text  x="1105.59" y="495.5" ></text>
</g>
<g >
<title>ext4_dax_fault (16,666,666 samples, 1.23%)</title><rect x="1029.8" y="437" width="14.5" height="15.0" fill="rgb(252,127,45)" rx="2" ry="2" />
<text  x="1032.75" y="447.5" ></text>
</g>
<g >
<title>pmem::obj::pool&lt;pmem_log_root&gt;::create (49,999,998 samples, 3.70%)</title><rect x="1102.6" y="613" width="43.7" height="15.0" fill="rgb(248,8,46)" rx="2" ry="2" />
<text  x="1105.59" y="623.5" >pmem..</text>
</g>
<g >
<title>unmap_page_range (16,666,666 samples, 1.23%)</title><rect x="1160.9" y="549" width="14.5" height="15.0" fill="rgb(218,24,20)" rx="2" ry="2" />
<text  x="1163.86" y="559.5" ></text>
</g>
<g >
<title>arena_chunk_alloc (16,666,666 samples, 1.23%)</title><rect x="1073.5" y="341" width="14.5" height="15.0" fill="rgb(235,223,2)" rx="2" ry="2" />
<text  x="1076.46" y="351.5" ></text>
</g>
<g >
<title>__handle_mm_fault (16,666,666 samples, 1.23%)</title><rect x="1131.7" y="373" width="14.6" height="15.0" fill="rgb(226,23,16)" rx="2" ry="2" />
<text  x="1134.73" y="383.5" ></text>
</g>
<g >
<title>[libkmod.so.2.3.2] (16,666,666 samples, 1.23%)</title><rect x="1015.2" y="421" width="14.6" height="15.0" fill="rgb(228,170,14)" rx="2" ry="2" />
<text  x="1018.19" y="431.5" ></text>
</g>
<g >
<title>__get_user_pages (16,666,666 samples, 1.23%)</title><rect x="956.9" y="389" width="14.6" height="15.0" fill="rgb(205,116,41)" rx="2" ry="2" />
<text  x="959.91" y="399.5" ></text>
</g>
<g >
<title>util_header_create (16,666,666 samples, 1.23%)</title><rect x="1015.2" y="517" width="14.6" height="15.0" fill="rgb(237,52,23)" rx="2" ry="2" />
<text  x="1018.19" y="527.5" ></text>
</g>
<g >
<title>_raw_read_lock (16,666,666 samples, 1.23%)</title><rect x="1029.8" y="373" width="14.5" height="15.0" fill="rgb(227,80,37)" rx="2" ry="2" />
<text  x="1032.75" y="383.5" ></text>
</g>
<g >
<title>alloc_pages_current (49,999,998 samples, 3.70%)</title><rect x="97.4" y="341" width="43.7" height="15.0" fill="rgb(220,192,52)" rx="2" ry="2" />
<text  x="100.41" y="351.5" >allo..</text>
</g>
<g >
<title>util_pool_create (16,666,666 samples, 1.23%)</title><rect x="1088.0" y="565" width="14.6" height="15.0" fill="rgb(248,97,7)" rx="2" ry="2" />
<text  x="1091.02" y="575.5" ></text>
</g>
<g >
<title>ext4_dax_fault (16,666,666 samples, 1.23%)</title><rect x="1102.6" y="437" width="14.6" height="15.0" fill="rgb(225,100,20)" rx="2" ry="2" />
<text  x="1105.59" y="447.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (16,666,666 samples, 1.23%)</title><rect x="1058.9" y="453" width="14.6" height="15.0" fill="rgb(242,106,52)" rx="2" ry="2" />
<text  x="1061.89" y="463.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1,066,666,624 samples, 79.01%)</title><rect x="39.1" y="517" width="932.4" height="15.0" fill="rgb(254,178,0)" rx="2" ry="2" />
<text  x="42.14" y="527.5" >swapgs_restore_regs_and_return_to_usermode</text>
</g>
<g >
<title>pmem_do_bvec (16,666,666 samples, 1.23%)</title><rect x="971.5" y="293" width="14.5" height="15.0" fill="rgb(206,124,9)" rx="2" ry="2" />
<text  x="974.48" y="303.5" ></text>
</g>
<g >
<title>mutex_unlock (83,333,330 samples, 6.17%)</title><rect x="272.2" y="341" width="72.9" height="15.0" fill="rgb(246,69,14)" rx="2" ry="2" />
<text  x="275.22" y="351.5" >mutex_un..</text>
</g>
<g >
<title>main (216,666,658 samples, 16.05%)</title><rect x="971.5" y="693" width="189.4" height="15.0" fill="rgb(229,122,46)" rx="2" ry="2" />
<text  x="974.48" y="703.5" >main</text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;std::_Bind&lt;void  (1,083,333,290 samples, 80.25%)</title><rect x="24.6" y="661" width="946.9" height="15.0" fill="rgb(212,206,43)" rx="2" ry="2" />
<text  x="27.57" y="671.5" >std::thread::_Invoker&lt;std::tuple&lt;std::_Bind&lt;void </text>
</g>
<g >
<title>ulog_construct (16,666,666 samples, 1.23%)</title><rect x="1029.8" y="549" width="14.5" height="15.0" fill="rgb(229,100,31)" rx="2" ry="2" />
<text  x="1032.75" y="559.5" ></text>
</g>
<g >
<title>pmalloc_boot (33,333,332 samples, 2.47%)</title><rect x="1058.9" y="517" width="29.1" height="15.0" fill="rgb(249,119,34)" rx="2" ry="2" />
<text  x="1061.89" y="527.5" >pm..</text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (1,083,333,290 samples, 80.25%)</title><rect x="24.6" y="549" width="946.9" height="15.0" fill="rgb(222,20,43)" rx="2" ry="2" />
<text  x="27.57" y="559.5" >std::__invoke_impl&lt;void, void </text>
</g>
<g >
<title>get_dump_page (16,666,666 samples, 1.23%)</title><rect x="956.9" y="405" width="14.6" height="15.0" fill="rgb(234,103,13)" rx="2" ry="2" />
<text  x="959.91" y="415.5" ></text>
</g>
<g >
<title>__do_page_fault (16,666,666 samples, 1.23%)</title><rect x="986.0" y="437" width="14.6" height="15.0" fill="rgb(226,119,19)" rx="2" ry="2" />
<text  x="989.05" y="447.5" ></text>
</g>
<g >
<title>copy_process.part.35 (16,666,666 samples, 1.23%)</title><rect x="10.0" y="613" width="14.6" height="15.0" fill="rgb(245,220,13)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>util_replica_create_local.constprop.12 (16,666,666 samples, 1.23%)</title><rect x="1088.0" y="533" width="14.6" height="15.0" fill="rgb(223,208,10)" rx="2" ry="2" />
<text  x="1091.02" y="543.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (16,666,666 samples, 1.23%)</title><rect x="1131.7" y="453" width="14.6" height="15.0" fill="rgb(245,53,16)" rx="2" ry="2" />
<text  x="1134.73" y="463.5" ></text>
</g>
<g >
<title>handle_mm_fault (16,666,666 samples, 1.23%)</title><rect x="1000.6" y="389" width="14.6" height="15.0" fill="rgb(217,75,29)" rx="2" ry="2" />
<text  x="1003.62" y="399.5" ></text>
</g>
<g >
<title>ext4_map_blocks (16,666,666 samples, 1.23%)</title><rect x="1102.6" y="373" width="14.6" height="15.0" fill="rgb(233,210,44)" rx="2" ry="2" />
<text  x="1105.59" y="383.5" ></text>
</g>
<g >
<title>handle_mm_fault (16,666,666 samples, 1.23%)</title><rect x="986.0" y="421" width="14.6" height="15.0" fill="rgb(240,200,11)" rx="2" ry="2" />
<text  x="989.05" y="431.5" ></text>
</g>
<g >
<title>__do_page_fault (16,666,666 samples, 1.23%)</title><rect x="1058.9" y="405" width="14.6" height="15.0" fill="rgb(217,134,31)" rx="2" ry="2" />
<text  x="1061.89" y="415.5" ></text>
</g>
<g >
<title>pmem::obj::pool_base::create (66,666,664 samples, 4.94%)</title><rect x="971.5" y="597" width="58.3" height="15.0" fill="rgb(223,133,11)" rx="2" ry="2" />
<text  x="974.48" y="607.5" >pmem::..</text>
</g>
<g >
<title>__kernel_write (783,333,302 samples, 58.02%)</title><rect x="272.2" y="373" width="684.7" height="15.0" fill="rgb(227,145,54)" rx="2" ry="2" />
<text  x="275.22" y="383.5" >__kernel_write</text>
</g>
<g >
<title>__GI___mmap64 (16,666,666 samples, 1.23%)</title><rect x="1073.5" y="197" width="14.5" height="15.0" fill="rgb(239,157,20)" rx="2" ry="2" />
<text  x="1076.46" y="207.5" ></text>
</g>
<g >
<title>[[stack]] (16,666,666 samples, 1.23%)</title><rect x="10.0" y="725" width="14.6" height="15.0" fill="rgb(247,146,23)" rx="2" ry="2" />
<text  x="13.00" y="735.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (16,666,666 samples, 1.23%)</title><rect x="1160.9" y="693" width="14.5" height="15.0" fill="rgb(232,15,41)" rx="2" ry="2" />
<text  x="1163.86" y="703.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (1,083,333,290 samples, 80.25%)</title><rect x="24.6" y="565" width="946.9" height="15.0" fill="rgb(207,194,7)" rx="2" ry="2" />
<text  x="27.57" y="575.5" >std::__invoke&lt;void </text>
</g>
<g >
<title>util_pool_create_uuids (16,666,666 samples, 1.23%)</title><rect x="1015.2" y="549" width="14.6" height="15.0" fill="rgb(231,154,19)" rx="2" ry="2" />
<text  x="1018.19" y="559.5" ></text>
</g>
<g >
<title>dump_skip (833,333,300 samples, 61.73%)</title><rect x="228.5" y="405" width="728.4" height="15.0" fill="rgb(221,46,46)" rx="2" ry="2" />
<text  x="231.52" y="415.5" >dump_skip</text>
</g>
<g >
<title>__x64_sys_clone (16,666,666 samples, 1.23%)</title><rect x="10.0" y="645" width="14.6" height="15.0" fill="rgb(218,215,26)" rx="2" ry="2" />
<text  x="13.00" y="655.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_init (16,666,666 samples, 1.23%)</title><rect x="986.0" y="485" width="14.6" height="15.0" fill="rgb(209,185,20)" rx="2" ry="2" />
<text  x="989.05" y="495.5" ></text>
</g>
<g >
<title>ext4_issue_zeroout (16,666,666 samples, 1.23%)</title><rect x="1102.6" y="357" width="14.6" height="15.0" fill="rgb(236,36,53)" rx="2" ry="2" />
<text  x="1105.59" y="367.5" ></text>
</g>
<g >
<title>blkdev_issue_zeroout (16,666,666 samples, 1.23%)</title><rect x="1102.6" y="341" width="14.6" height="15.0" fill="rgb(254,112,36)" rx="2" ry="2" />
<text  x="1105.59" y="351.5" ></text>
</g>
<g >
<title>ndctl_namespace_get_first (16,666,666 samples, 1.23%)</title><rect x="1088.0" y="453" width="14.6" height="15.0" fill="rgb(206,131,7)" rx="2" ry="2" />
<text  x="1091.02" y="463.5" ></text>
</g>
<g >
<title>heap_buckets_init (16,666,666 samples, 1.23%)</title><rect x="1000.6" y="501" width="14.6" height="15.0" fill="rgb(220,210,49)" rx="2" ry="2" />
<text  x="1003.62" y="511.5" ></text>
</g>
<g >
<title>do_page_fault (16,666,666 samples, 1.23%)</title><rect x="1044.3" y="469" width="14.6" height="15.0" fill="rgb(223,213,1)" rx="2" ry="2" />
<text  x="1047.32" y="479.5" ></text>
</g>
<g >
<title>std::thread::_M_start_thread (16,666,666 samples, 1.23%)</title><rect x="10.0" y="709" width="14.6" height="15.0" fill="rgb(227,152,18)" rx="2" ry="2" />
<text  x="13.00" y="719.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (16,666,666 samples, 1.23%)</title><rect x="1088.0" y="325" width="14.6" height="15.0" fill="rgb(249,209,30)" rx="2" ry="2" />
<text  x="1091.02" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (16,666,666 samples, 1.23%)</title><rect x="1160.9" y="709" width="14.5" height="15.0" fill="rgb(252,205,41)" rx="2" ry="2" />
<text  x="1163.86" y="719.5" ></text>
</g>
<g >
<title>file_update_time (16,666,666 samples, 1.23%)</title><rect x="723.8" y="325" width="14.6" height="15.0" fill="rgb(250,209,12)" rx="2" ry="2" />
<text  x="726.83" y="335.5" ></text>
</g>
<g >
<title>__sb_start_write (16,666,666 samples, 1.23%)</title><rect x="82.8" y="341" width="14.6" height="15.0" fill="rgb(235,79,41)" rx="2" ry="2" />
<text  x="85.84" y="351.5" ></text>
</g>
<g >
<title>handle_mm_fault (16,666,666 samples, 1.23%)</title><rect x="971.5" y="485" width="14.5" height="15.0" fill="rgb(214,43,28)" rx="2" ry="2" />
<text  x="974.48" y="495.5" ></text>
</g>
<g >
<title>je_chunk_alloc_wrapper (16,666,666 samples, 1.23%)</title><rect x="1073.5" y="277" width="14.5" height="15.0" fill="rgb(208,201,30)" rx="2" ry="2" />
<text  x="1076.46" y="287.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (99,999,996 samples, 7.41%)</title><rect x="403.3" y="309" width="87.4" height="15.0" fill="rgb(207,223,40)" rx="2" ry="2" />
<text  x="406.33" y="319.5" >__alloc_pa..</text>
</g>
<g >
<title>submit_bio (16,666,666 samples, 1.23%)</title><rect x="1102.6" y="309" width="14.6" height="15.0" fill="rgb(212,72,48)" rx="2" ry="2" />
<text  x="1105.59" y="319.5" ></text>
</g>
<g >
<title>je_iallocztm (16,666,666 samples, 1.23%)</title><rect x="1073.5" y="405" width="14.5" height="15.0" fill="rgb(242,184,33)" rx="2" ry="2" />
<text  x="1076.46" y="415.5" ></text>
</g>
<g >
<title>memcg_kmem_charge_memcg (33,333,332 samples, 2.47%)</title><rect x="447.0" y="277" width="29.2" height="15.0" fill="rgb(232,95,40)" rx="2" ry="2" />
<text  x="450.04" y="287.5" >me..</text>
</g>
<g >
<title>do_page_fault (16,666,666 samples, 1.23%)</title><rect x="986.0" y="453" width="14.6" height="15.0" fill="rgb(249,207,17)" rx="2" ry="2" />
<text  x="989.05" y="463.5" ></text>
</g>
<g >
<title>clear_page_erms (16,666,666 samples, 1.23%)</title><rect x="986.0" y="357" width="14.6" height="15.0" fill="rgb(219,1,20)" rx="2" ry="2" />
<text  x="989.05" y="367.5" ></text>
</g>
<g >
<title>bio_endio (16,666,666 samples, 1.23%)</title><rect x="1102.6" y="261" width="14.6" height="15.0" fill="rgb(246,8,9)" rx="2" ry="2" />
<text  x="1105.59" y="271.5" ></text>
</g>
<g >
<title>security_file_free (16,666,666 samples, 1.23%)</title><rect x="1088.0" y="261" width="14.6" height="15.0" fill="rgb(219,216,33)" rx="2" ry="2" />
<text  x="1091.02" y="271.5" ></text>
</g>
<g >
<title>alloc_pages_vma (16,666,666 samples, 1.23%)</title><rect x="986.0" y="389" width="14.6" height="15.0" fill="rgb(242,226,24)" rx="2" ry="2" />
<text  x="989.05" y="399.5" ></text>
</g>
<g >
<title>mmap_region (16,666,666 samples, 1.23%)</title><rect x="1073.5" y="85" width="14.5" height="15.0" fill="rgb(239,74,13)" rx="2" ry="2" />
<text  x="1076.46" y="95.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (1,083,333,290 samples, 80.25%)</title><rect x="24.6" y="597" width="946.9" height="15.0" fill="rgb(209,70,49)" rx="2" ry="2" />
<text  x="27.57" y="607.5" >std::_Bind&lt;void </text>
</g>
<g >
<title>_start (216,666,658 samples, 16.05%)</title><rect x="971.5" y="725" width="189.4" height="15.0" fill="rgb(227,157,34)" rx="2" ry="2" />
<text  x="974.48" y="735.5" >_start</text>
</g>
<g >
<title>mutex_lock (249,999,990 samples, 18.52%)</title><rect x="738.4" y="325" width="218.5" height="15.0" fill="rgb(251,83,36)" rx="2" ry="2" />
<text  x="741.40" y="335.5" >mutex_lock</text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (16,666,666 samples, 1.23%)</title><rect x="388.8" y="293" width="14.5" height="15.0" fill="rgb(207,41,20)" rx="2" ry="2" />
<text  x="391.77" y="303.5" ></text>
</g>
<g >
<title>_do_fork (16,666,666 samples, 1.23%)</title><rect x="10.0" y="629" width="14.6" height="15.0" fill="rgb(250,98,9)" rx="2" ry="2" />
<text  x="13.00" y="639.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (16,666,666 samples, 1.23%)</title><rect x="723.8" y="293" width="14.6" height="15.0" fill="rgb(231,44,44)" rx="2" ry="2" />
<text  x="726.83" y="303.5" ></text>
</g>
<g >
<title>memcg_kmem_charge_memcg (16,666,666 samples, 1.23%)</title><rect x="126.5" y="293" width="14.6" height="15.0" fill="rgb(211,77,12)" rx="2" ry="2" />
<text  x="129.54" y="303.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (1,083,333,290 samples, 80.25%)</title><rect x="24.6" y="581" width="946.9" height="15.0" fill="rgb(253,171,19)" rx="2" ry="2" />
<text  x="27.57" y="591.5" >std::_Bind&lt;void </text>
</g>
<g >
<title>ext4_dax_huge_fault (16,666,666 samples, 1.23%)</title><rect x="971.5" y="453" width="14.5" height="15.0" fill="rgb(233,105,7)" rx="2" ry="2" />
<text  x="974.48" y="463.5" ></text>
</g>
<g >
<title>perf_event_mmap (16,666,666 samples, 1.23%)</title><rect x="1073.5" y="69" width="14.5" height="15.0" fill="rgb(243,159,24)" rx="2" ry="2" />
<text  x="1076.46" y="79.5" ></text>
</g>
<g >
<title>util_header_create (16,666,666 samples, 1.23%)</title><rect x="1088.0" y="517" width="14.6" height="15.0" fill="rgb(251,151,29)" rx="2" ry="2" />
<text  x="1091.02" y="527.5" ></text>
</g>
<g >
<title>shutdown_state_add_part (16,666,666 samples, 1.23%)</title><rect x="1088.0" y="501" width="14.6" height="15.0" fill="rgb(228,96,49)" rx="2" ry="2" />
<text  x="1091.02" y="511.5" ></text>
</g>
<g >
<title>__fput (16,666,666 samples, 1.23%)</title><rect x="1088.0" y="277" width="14.6" height="15.0" fill="rgb(218,160,19)" rx="2" ry="2" />
<text  x="1091.02" y="287.5" ></text>
</g>
<g >
<title>do_page_fault (16,666,666 samples, 1.23%)</title><rect x="1117.2" y="437" width="14.5" height="15.0" fill="rgb(231,198,30)" rx="2" ry="2" />
<text  x="1120.16" y="447.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (16,666,666 samples, 1.23%)</title><rect x="1000.6" y="357" width="14.6" height="15.0" fill="rgb(239,93,33)" rx="2" ry="2" />
<text  x="1003.62" y="367.5" ></text>
</g>
<g >
<title>submit_bio (16,666,666 samples, 1.23%)</title><rect x="971.5" y="341" width="14.5" height="15.0" fill="rgb(222,12,1)" rx="2" ry="2" />
<text  x="974.48" y="351.5" ></text>
</g>
<g >
<title>__close (16,666,666 samples, 1.23%)</title><rect x="1088.0" y="373" width="14.6" height="15.0" fill="rgb(245,193,33)" rx="2" ry="2" />
<text  x="1091.02" y="383.5" ></text>
</g>
<g >
<title>mmput (16,666,666 samples, 1.23%)</title><rect x="1160.9" y="613" width="14.5" height="15.0" fill="rgb(226,90,23)" rx="2" ry="2" />
<text  x="1163.86" y="623.5" ></text>
</g>
<g >
<title>obj_runtime_init_common (49,999,998 samples, 3.70%)</title><rect x="1044.3" y="549" width="43.7" height="15.0" fill="rgb(208,209,29)" rx="2" ry="2" />
<text  x="1047.32" y="559.5" >obj_..</text>
</g>
<g >
<title>inherit_task_group.isra.109.part.110 (16,666,666 samples, 1.23%)</title><rect x="10.0" y="581" width="14.6" height="15.0" fill="rgb(205,21,39)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>pmem_make_request (16,666,666 samples, 1.23%)</title><rect x="1102.6" y="277" width="14.6" height="15.0" fill="rgb(249,177,11)" rx="2" ry="2" />
<text  x="1105.59" y="287.5" ></text>
</g>
<g >
<title>pmem_make_request (16,666,666 samples, 1.23%)</title><rect x="971.5" y="309" width="14.5" height="15.0" fill="rgb(207,114,50)" rx="2" ry="2" />
<text  x="974.48" y="319.5" ></text>
</g>
<g >
<title>lane_init_data (16,666,666 samples, 1.23%)</title><rect x="1029.8" y="565" width="14.5" height="15.0" fill="rgb(238,139,52)" rx="2" ry="2" />
<text  x="1032.75" y="575.5" ></text>
</g>
<g >
<title>handle_mm_fault (16,666,666 samples, 1.23%)</title><rect x="1131.7" y="389" width="14.6" height="15.0" fill="rgb(210,102,9)" rx="2" ry="2" />
<text  x="1134.73" y="399.5" ></text>
</g>
<g >
<title>__handle_mm_fault (16,666,666 samples, 1.23%)</title><rect x="986.0" y="405" width="14.6" height="15.0" fill="rgb(252,161,50)" rx="2" ry="2" />
<text  x="989.05" y="415.5" ></text>
</g>
<g >
<title>heap_arena_new (16,666,666 samples, 1.23%)</title><rect x="1117.2" y="485" width="14.5" height="15.0" fill="rgb(206,83,32)" rx="2" ry="2" />
<text  x="1120.16" y="495.5" ></text>
</g>
<g >
<title>arena_chunk_alloc_internal_hard (16,666,666 samples, 1.23%)</title><rect x="1073.5" y="293" width="14.5" height="15.0" fill="rgb(216,85,42)" rx="2" ry="2" />
<text  x="1076.46" y="303.5" ></text>
</g>
<g >
<title>generic_make_request (16,666,666 samples, 1.23%)</title><rect x="1102.6" y="293" width="14.6" height="15.0" fill="rgb(211,99,52)" rx="2" ry="2" />
<text  x="1105.59" y="303.5" ></text>
</g>
<g >
<title>generic_make_request (16,666,666 samples, 1.23%)</title><rect x="971.5" y="325" width="14.5" height="15.0" fill="rgb(214,70,3)" rx="2" ry="2" />
<text  x="974.48" y="335.5" ></text>
</g>
<g >
<title>page_fault (16,666,666 samples, 1.23%)</title><rect x="971.5" y="533" width="14.5" height="15.0" fill="rgb(208,82,22)" rx="2" ry="2" />
<text  x="974.48" y="543.5" ></text>
</g>
<g >
<title>lane_init_data (16,666,666 samples, 1.23%)</title><rect x="971.5" y="565" width="14.5" height="15.0" fill="rgb(216,165,44)" rx="2" ry="2" />
<text  x="974.48" y="575.5" ></text>
</g>
<g >
<title>dump_emit (216,666,658 samples, 16.05%)</title><rect x="39.1" y="405" width="189.4" height="15.0" fill="rgb(228,13,38)" rx="2" ry="2" />
<text  x="42.14" y="415.5" >dump_emit</text>
</g>
<g >
<title>prepare_exit_to_usermode (1,066,666,624 samples, 79.01%)</title><rect x="39.1" y="501" width="932.4" height="15.0" fill="rgb(246,176,23)" rx="2" ry="2" />
<text  x="42.14" y="511.5" >prepare_exit_to_usermode</text>
</g>
<g >
<title>ext4_iomap_begin (16,666,666 samples, 1.23%)</title><rect x="971.5" y="421" width="14.5" height="15.0" fill="rgb(208,96,10)" rx="2" ry="2" />
<text  x="974.48" y="431.5" ></text>
</g>
<g >
<title>__sb_start_write (33,333,332 samples, 2.47%)</title><rect x="359.6" y="325" width="29.2" height="15.0" fill="rgb(206,222,12)" rx="2" ry="2" />
<text  x="362.63" y="335.5" >__..</text>
</g>
<g >
<title>copy_page_from_iter (266,666,656 samples, 19.75%)</title><rect x="490.7" y="325" width="233.1" height="15.0" fill="rgb(214,94,2)" rx="2" ry="2" />
<text  x="493.74" y="335.5" >copy_page_from_iter</text>
</g>
<g >
<title>__handle_mm_fault (16,666,666 samples, 1.23%)</title><rect x="1000.6" y="373" width="14.6" height="15.0" fill="rgb(209,196,53)" rx="2" ry="2" />
<text  x="1003.62" y="383.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Bind&lt;void  (1,083,333,290 samples, 80.25%)</title><rect x="24.6" y="629" width="946.9" height="15.0" fill="rgb(224,179,13)" rx="2" ry="2" />
<text  x="27.57" y="639.5" >std::__invoke&lt;std::_Bind&lt;void </text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;pmem_l0_info&gt;::persistent_ptr (16,666,666 samples, 1.23%)</title><rect x="1146.3" y="629" width="14.6" height="15.0" fill="rgb(247,67,14)" rx="2" ry="2" />
<text  x="1149.30" y="639.5" ></text>
</g>
<g >
<title>dax_iomap_fault (16,666,666 samples, 1.23%)</title><rect x="1102.6" y="405" width="14.6" height="15.0" fill="rgb(207,17,13)" rx="2" ry="2" />
<text  x="1105.59" y="415.5" ></text>
</g>
<g >
<title>pmalloc_boot (33,333,332 samples, 2.47%)</title><rect x="986.0" y="517" width="29.2" height="15.0" fill="rgb(211,197,26)" rx="2" ry="2" />
<text  x="989.05" y="527.5" >pm..</text>
</g>
<g >
<title>alloc_pages_vma (16,666,666 samples, 1.23%)</title><rect x="1131.7" y="357" width="14.6" height="15.0" fill="rgb(225,190,38)" rx="2" ry="2" />
<text  x="1134.73" y="367.5" ></text>
</g>
<g >
<title>complete (16,666,666 samples, 1.23%)</title><rect x="1102.6" y="229" width="14.6" height="15.0" fill="rgb(254,162,44)" rx="2" ry="2" />
<text  x="1105.59" y="239.5" ></text>
</g>
<g >
<title>ext4_dax_huge_fault (16,666,666 samples, 1.23%)</title><rect x="1029.8" y="421" width="14.5" height="15.0" fill="rgb(207,59,33)" rx="2" ry="2" />
<text  x="1032.75" y="431.5" ></text>
</g>
<g >
<title>daxctl_unref (16,666,666 samples, 1.23%)</title><rect x="1015.2" y="453" width="14.6" height="15.0" fill="rgb(221,53,9)" rx="2" ry="2" />
<text  x="1018.19" y="463.5" ></text>
</g>
<g >
<title>pmemobj_create (49,999,998 samples, 3.70%)</title><rect x="1102.6" y="581" width="43.7" height="15.0" fill="rgb(228,195,44)" rx="2" ry="2" />
<text  x="1105.59" y="591.5" >pmem..</text>
</g>
<g >
<title>unmap_single_vma (16,666,666 samples, 1.23%)</title><rect x="1160.9" y="565" width="14.5" height="15.0" fill="rgb(214,213,3)" rx="2" ry="2" />
<text  x="1163.86" y="575.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (16,666,666 samples, 1.23%)</title><rect x="1131.7" y="341" width="14.6" height="15.0" fill="rgb(247,36,21)" rx="2" ry="2" />
<text  x="1134.73" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (16,666,666 samples, 1.23%)</title><rect x="1160.9" y="725" width="14.5" height="15.0" fill="rgb(218,2,10)" rx="2" ry="2" />
<text  x="1163.86" y="735.5" ></text>
</g>
<g >
<title>____fput (16,666,666 samples, 1.23%)</title><rect x="1088.0" y="293" width="14.6" height="15.0" fill="rgb(235,100,53)" rx="2" ry="2" />
<text  x="1091.02" y="303.5" ></text>
</g>
<g >
<title>dax_iomap_fault (16,666,666 samples, 1.23%)</title><rect x="971.5" y="437" width="14.5" height="15.0" fill="rgb(240,214,37)" rx="2" ry="2" />
<text  x="974.48" y="447.5" ></text>
</g>
<g >
<title>recycler_new (33,333,332 samples, 2.47%)</title><rect x="1058.9" y="469" width="29.1" height="15.0" fill="rgb(231,179,40)" rx="2" ry="2" />
<text  x="1061.89" y="479.5" >re..</text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Bind&lt;void  (1,083,333,290 samples, 80.25%)</title><rect x="24.6" y="613" width="946.9" height="15.0" fill="rgb(234,114,15)" rx="2" ry="2" />
<text  x="27.57" y="623.5" >std::__invoke_impl&lt;void, std::_Bind&lt;void </text>
</g>
<g >
<title>alloc_pages_current (99,999,996 samples, 7.41%)</title><rect x="403.3" y="325" width="87.4" height="15.0" fill="rgb(253,59,21)" rx="2" ry="2" />
<text  x="406.33" y="335.5" >alloc_page..</text>
</g>
<g >
<title>do_exit (16,666,666 samples, 1.23%)</title><rect x="1160.9" y="629" width="14.5" height="15.0" fill="rgb(238,26,18)" rx="2" ry="2" />
<text  x="1163.86" y="639.5" ></text>
</g>
<g >
<title>ListDB::Init (216,666,658 samples, 16.05%)</title><rect x="971.5" y="645" width="189.4" height="15.0" fill="rgb(223,39,31)" rx="2" ry="2" />
<text  x="974.48" y="655.5" >ListDB::Init</text>
</g>
<g >
<title>arena_chunk_alloc_internal (16,666,666 samples, 1.23%)</title><rect x="1073.5" y="309" width="14.5" height="15.0" fill="rgb(233,128,30)" rx="2" ry="2" />
<text  x="1076.46" y="319.5" ></text>
</g>
<g >
<title>memcpy_flushcache (16,666,666 samples, 1.23%)</title><rect x="971.5" y="261" width="14.5" height="15.0" fill="rgb(240,84,36)" rx="2" ry="2" />
<text  x="974.48" y="271.5" ></text>
</g>
<g >
<title>heap_buckets_init (33,333,332 samples, 2.47%)</title><rect x="1058.9" y="501" width="29.1" height="15.0" fill="rgb(237,156,45)" rx="2" ry="2" />
<text  x="1061.89" y="511.5" >he..</text>
</g>
<g >
<title>exit_to_usermode_loop (1,066,666,624 samples, 79.01%)</title><rect x="39.1" y="485" width="932.4" height="15.0" fill="rgb(238,75,38)" rx="2" ry="2" />
<text  x="42.14" y="495.5" >exit_to_usermode_loop</text>
</g>
<g >
<title>mutex_lock (16,666,666 samples, 1.23%)</title><rect x="214.0" y="341" width="14.5" height="15.0" fill="rgb(247,228,2)" rx="2" ry="2" />
<text  x="216.95" y="351.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (16,666,666 samples, 1.23%)</title><rect x="1073.5" y="149" width="14.5" height="15.0" fill="rgb(221,227,42)" rx="2" ry="2" />
<text  x="1076.46" y="159.5" ></text>
</g>
<g >
<title>do_mmap (16,666,666 samples, 1.23%)</title><rect x="1073.5" y="101" width="14.5" height="15.0" fill="rgb(235,39,41)" rx="2" ry="2" />
<text  x="1076.46" y="111.5" ></text>
</g>
<g >
<title>try_charge (16,666,666 samples, 1.23%)</title><rect x="461.6" y="261" width="14.6" height="15.0" fill="rgb(240,78,40)" rx="2" ry="2" />
<text  x="464.60" y="271.5" ></text>
</g>
<g >
<title>do_coredump (1,066,666,624 samples, 79.01%)</title><rect x="39.1" y="437" width="932.4" height="15.0" fill="rgb(228,161,47)" rx="2" ry="2" />
<text  x="42.14" y="447.5" >do_coredump</text>
</g>
<g >
<title>heap_buckets_init (16,666,666 samples, 1.23%)</title><rect x="1131.7" y="501" width="14.6" height="15.0" fill="rgb(212,189,33)" rx="2" ry="2" />
<text  x="1134.73" y="511.5" ></text>
</g>
<g >
<title>std::operator&amp; (16,666,666 samples, 1.23%)</title><rect x="24.6" y="501" width="14.5" height="15.0" fill="rgb(207,122,34)" rx="2" ry="2" />
<text  x="27.57" y="511.5" ></text>
</g>
<g >
<title>DelegatePool::BackgroundMainLoop (16,666,666 samples, 1.23%)</title><rect x="24.6" y="517" width="14.5" height="15.0" fill="rgb(249,94,45)" rx="2" ry="2" />
<text  x="27.57" y="527.5" ></text>
</g>
<g >
<title>pmem::obj::pool&lt;pmem_blob_root&gt;::create (83,333,330 samples, 6.17%)</title><rect x="1029.8" y="613" width="72.8" height="15.0" fill="rgb(219,152,38)" rx="2" ry="2" />
<text  x="1032.75" y="623.5" >pmem::ob..</text>
</g>
<g >
<title>submit_bio_wait (16,666,666 samples, 1.23%)</title><rect x="971.5" y="357" width="14.5" height="15.0" fill="rgb(206,58,16)" rx="2" ry="2" />
<text  x="974.48" y="367.5" ></text>
</g>
<g >
<title>memcg_kmem_charge (16,666,666 samples, 1.23%)</title><rect x="126.5" y="309" width="14.6" height="15.0" fill="rgb(226,133,23)" rx="2" ry="2" />
<text  x="129.54" y="319.5" ></text>
</g>
<g >
<title>elf_core_dump (1,066,666,624 samples, 79.01%)</title><rect x="39.1" y="421" width="932.4" height="15.0" fill="rgb(244,43,35)" rx="2" ry="2" />
<text  x="42.14" y="431.5" >elf_core_dump</text>
</g>
<g >
<title>Benchmark::Benchmark (216,666,658 samples, 16.05%)</title><rect x="971.5" y="661" width="189.4" height="15.0" fill="rgb(223,41,4)" rx="2" ry="2" />
<text  x="974.48" y="671.5" >Benchmark::Benchmark</text>
</g>
<g >
<title>__do_page_fault (16,666,666 samples, 1.23%)</title><rect x="1102.6" y="501" width="14.6" height="15.0" fill="rgb(234,215,47)" rx="2" ry="2" />
<text  x="1105.59" y="511.5" ></text>
</g>
<g >
<title>memset_movnt_avx512f_clwb (16,666,666 samples, 1.23%)</title><rect x="1175.4" y="725" width="14.6" height="15.0" fill="rgb(230,153,9)" rx="2" ry="2" />
<text  x="1178.43" y="735.5" ></text>
</g>
<g >
<title>__handle_mm_fault (16,666,666 samples, 1.23%)</title><rect x="1029.8" y="469" width="14.5" height="15.0" fill="rgb(239,64,9)" rx="2" ry="2" />
<text  x="1032.75" y="479.5" ></text>
</g>
<g >
<title>__handle_mm_fault (16,666,666 samples, 1.23%)</title><rect x="1044.3" y="421" width="14.6" height="15.0" fill="rgb(239,59,8)" rx="2" ry="2" />
<text  x="1047.32" y="431.5" ></text>
</g>
<g >
<title>__mutex_init (16,666,666 samples, 1.23%)</title><rect x="10.0" y="549" width="14.6" height="15.0" fill="rgb(218,12,46)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>memcg_kmem_charge (66,666,664 samples, 4.94%)</title><rect x="432.5" y="293" width="58.2" height="15.0" fill="rgb(240,225,34)" rx="2" ry="2" />
<text  x="435.47" y="303.5" >memcg_..</text>
</g>
<g >
<title>__GI___clone (1,083,333,290 samples, 80.25%)</title><rect x="24.6" y="725" width="946.9" height="15.0" fill="rgb(212,101,7)" rx="2" ry="2" />
<text  x="27.57" y="735.5" >__GI___clone</text>
</g>
<g >
<title>__vfs_write (216,666,658 samples, 16.05%)</title><rect x="39.1" y="373" width="189.4" height="15.0" fill="rgb(241,78,34)" rx="2" ry="2" />
<text  x="42.14" y="383.5" >__vfs_write</text>
</g>
<g >
<title>util_pool_create (16,666,666 samples, 1.23%)</title><rect x="1015.2" y="565" width="14.6" height="15.0" fill="rgb(241,176,24)" rx="2" ry="2" />
<text  x="1018.19" y="575.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (16,666,666 samples, 1.23%)</title><rect x="10.0" y="677" width="14.6" height="15.0" fill="rgb(226,186,0)" rx="2" ry="2" />
<text  x="13.00" y="687.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (49,999,998 samples, 3.70%)</title><rect x="97.4" y="325" width="43.7" height="15.0" fill="rgb(240,135,37)" rx="2" ry="2" />
<text  x="100.41" y="335.5" >__al..</text>
</g>
<g >
<title>[libndctl.so.6.16.0] (16,666,666 samples, 1.23%)</title><rect x="1088.0" y="389" width="14.6" height="15.0" fill="rgb(237,67,14)" rx="2" ry="2" />
<text  x="1091.02" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (16,666,666 samples, 1.23%)</title><rect x="1073.5" y="165" width="14.5" height="15.0" fill="rgb(206,128,32)" rx="2" ry="2" />
<text  x="1076.46" y="175.5" ></text>
</g>
<g >
<title>memcpy_erms (216,666,658 samples, 16.05%)</title><rect x="534.4" y="309" width="189.4" height="15.0" fill="rgb(232,134,32)" rx="2" ry="2" />
<text  x="537.44" y="319.5" >memcpy_erms</text>
</g>
<g >
<title>je_pages_map (16,666,666 samples, 1.23%)</title><rect x="1073.5" y="213" width="14.5" height="15.0" fill="rgb(241,3,24)" rx="2" ry="2" />
<text  x="1076.46" y="223.5" ></text>
</g>
<g >
<title>__do_page_fault (16,666,666 samples, 1.23%)</title><rect x="1131.7" y="405" width="14.6" height="15.0" fill="rgb(248,49,42)" rx="2" ry="2" />
<text  x="1134.73" y="415.5" ></text>
</g>
<g >
<title>__mutex_lock_slowpath (16,666,666 samples, 1.23%)</title><rect x="214.0" y="325" width="14.5" height="15.0" fill="rgb(218,39,54)" rx="2" ry="2" />
<text  x="216.95" y="335.5" ></text>
</g>
<g >
<title>get_page_from_freelist (33,333,332 samples, 2.47%)</title><rect x="403.3" y="293" width="29.2" height="15.0" fill="rgb(236,16,53)" rx="2" ry="2" />
<text  x="406.33" y="303.5" >ge..</text>
</g>
<g >
<title>Pmem::BindPoolSet&lt;pmem_log_root&gt; (49,999,998 samples, 3.70%)</title><rect x="1102.6" y="629" width="43.7" height="15.0" fill="rgb(215,82,44)" rx="2" ry="2" />
<text  x="1105.59" y="639.5" >Pmem..</text>
</g>
<g >
<title>pmem2_source_device_usc (16,666,666 samples, 1.23%)</title><rect x="1088.0" y="485" width="14.6" height="15.0" fill="rgb(246,100,27)" rx="2" ry="2" />
<text  x="1091.02" y="495.5" ></text>
</g>
<g >
<title>[libndctl.so.6.16.0] (16,666,666 samples, 1.23%)</title><rect x="1088.0" y="437" width="14.6" height="15.0" fill="rgb(247,213,36)" rx="2" ry="2" />
<text  x="1091.02" y="447.5" ></text>
</g>
<g >
<title>heap_create_alloc_class_buckets (33,333,332 samples, 2.47%)</title><rect x="1058.9" y="485" width="29.1" height="15.0" fill="rgb(214,184,9)" rx="2" ry="2" />
<text  x="1061.89" y="495.5" >he..</text>
</g>
</g>
</svg>
